<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="jdbc.properties" />
 <!--   什么是延迟加载
    在真正使用数据时才发起查询，不用的时候不查询。按需加载（懒加载）
    什么是立即加载
    不管用不用，只要一调用方法，马上发起查询。

    在对应的四种表关系中：一对多，多对一，一对一，多对多
    一对多，多对多：通常情况下我们都是采用延迟加载。
    多对一，一对一：通常情况下我们都是采用立即加载。

    ps：这个项目中的mapper xml文件配置方式，在实际查询中查一个数据会调用多次查询，造成了查询的负荷，但是相对数据来讲得到了控制，只查询使用到的数据，
    所以当中也有个取舍问题。-->


    <!--必须要配置如下属性，否则延时查询不会生效-->
    <settings>
        <!--延迟加载，默认true-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--当开启时，任何方法的调用都会加载该对象的所有属性,立即加载，默认false-->
        <setting name="aggressiveLazyLoading" value="false" />
    </settings>

    <!--使用typeAliases配置别名，它只能配置domain中类的别名(不用区分类名大小写了) -->
    <typeAliases>
        <!--因项目结构问题，这里使用package会导致类引用串掉-->
        <!--<package name="com.lin0302.domain" />-->
        <typeAlias type="com.lin0401.domain.User" alias="user0401" />
        <typeAlias type="com.lin0401.domain.Account" alias="account0401" />
    </typeAliases>
    <environments default="mysql">
        <environment id="mysql">
            <!-- 配置事务的类型-->
            <transactionManager type="JDBC"></transactionManager>
            <!-- 配置数据源（连接池） -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 配置映射文件的位置,使用package要求mapper xml文件所在的路径必须要和类的包名一致，否则找不到-->
    <mappers>
       <package name="com.lin0401.dao"></package>
    </mappers>
</configuration>